# Figure out where to filter the years of DHS data
json_file <- fromJSON(paste0('http://api.dhsprogram.com/rest/dhs/data?breakdown=national&indicatorIds=',indicators,
'&countryIds=', countries,
'&SurveyYear=', years,
'&apiKey=', apiKey,
'&perpage=5000'))
# Unlist the JSON file entries
json_data <- lapply(json_file$Data, function(x) { unlist(x) })
# Convert JSON input to a data frame
allData <- as.data.frame(do.call("rbind", json_data),stringsAsFactors=FALSE)
svyYrs = allData %>%
group_by(SurveyYear, CountryName) %>%
summarise(num  = n()) %>%
mutate(year = as.integer(SurveyYear))
ggplot(svyYrs, aes(x = year, y = CountryName, size = num)) +
geom_point() +
scale_x_continuous(breaks = seq(1986, 2016, by = 4)) +
theme_xgrid()
ggplot(svyYrs, aes(x = year, y = CountryName, size = num)) +
geom_point() +
scale_x_continuous(limits = c(2000, 2016),
breaks = seq(2000, 2016, by = 2)) +
theme_xgrid()
years = paste0(seq(2000,2016), collapse = ',')
# Import DHS Indicator National-level data
natl = loadDHS(breakdown = 'national', indicators = indicators,
countries = countries, years = years, apiKey = apiKey, numResults = 5000)
x = loadDHS(breakdown = 'national', indicators = indicator14, countries = countries, years = years, apiKey = apiKey, numResults = 100)
write.csv(natl, '~/Documents/USAID/West Africa Regional 2016/dataout/WAFR_DHS_natl.csv')
View(natl)
for (i in seq_along(indicator)) {
print(i)
}
subnatl = NULL
for (i in seq_along(indicator)) {
print(i)
temp = loadDHS(breakdown = 'national', indicators = indicator[i], countries = countries,
years = years, apiKey = apiKey, numResults = 5000)
subnatl = rbind(temp, subnatl)
}
# Import DHS data ---------------------------------------------------------
# Common indicators
# Unmet need total (iCE37FE2)
# Total fertility rate (i133C8F8)
# Median duration of exclusive breastfeeding (i5716309)
# Women receiving an HIV test and receiving test results in the last 12 months (i42759492)
# Children underweight (iCC97002)
# Households with electricity (i7C3CB1)
# Children under 5 who slept under an insecticide treated net (ITN) (iC6D4E13)
# Infant mortality rate (i42FFDB2)
# Men receiving an HIV test and receiving test results in the last 12 months (i42759491)
# HIV prevalence among general population (i41075E93)
# HIV prevalence among women (i41075E92)
# HIV prevalence among men (i41075E91)
# Under-five mortality rate (i42FFDB4)
# Received all vaccinations (i4E75F0A)
# Treatment of diarrhea: Either ORS or RHS (i533BDCB)
# Median age at first marriage: 25-49 (i349C430)
# Children wasted (iCC973EA)
# Women with secondary or higher education (iA999FA)
# Place of delivery: Health facility (i49B3AD0)
# Children stunted (iCC96C1A)
# Married women currently using any modern method of contraception (i209E191)
# Married women currently using any method of contraception (i209E190)
# Median age at first sexual intercourse: 25-49 (i36848B0)
# Women who are literate (i797B5DA)
library(llamar)
loadPkgs()
# set up the queries ------------------------------------------------------
apiKey = 'USAAID-405632'
indicator = NULL
indicator[1] = 'FP_NADM_W_UNT,FE_FRTR_W_TFR,CN_BFDR_C_MDE,HA_CPHT_W_T1R,HC_ELEC_H_ELC'
indicator[2] = 'CN_NUTS_C_WA2,HA_HIVP_W_HIV,HA_HIVP_W_HVE'
indicator[3] = 'HA_HIVP_B_HIV,HA_HIVP_B_HVE,CM_ECMT_C_U5M,CM_ECMR_C_IMR'
indicator[4] = 'CM_ECMR_C_NNR,CH_VACS_C_BAS,CH_VACS_C_NON,CH_VACC_C_BAS,CH_VACC_C_NON'
indicator[5] = 'CH_VAC1_C_BAS,CH_VAC1_C_NON,CH_DIAT_C_ORT,CH_DIAR_C_DIA,MA_AAFM_W_M20'
indicator[6] = 'MA_AAFM_W,MA_AAFM_W,MA_AAFM_W,MA_AAFM_W,MA_AAFM_W,MA_AAFM_W,MA_AAFM_W_M2,SX_AAFS_W_M20'
indicator[7] = 'HA_HIVP_M_HVE,HA_HIVP_M_HIV'
indicator[8] = 'CN_NUTS_C_WH2,CN_NUTS_C_HA2,ED_EDUC_W_SEP'
indicator[9] = 'CM_ECMR_C_PNR,FP_CUSA_W_MOD,FP_CUSM_W_ANY,FP_CUSM_W_MOD'
indicator[10] = 'SX_AAFS_W_M25,SX_AAFS_W_M30,SX_AAFS_W_M35,SX_AAFS_W_M40,SX_AAFS_W_M45'
indicator[11] = 'SX_AAFS_W_M2A,SX_AAFS_W_M2B,ED_LITR_W_LIT,RH_PAHC_W_KNW,RH_PAHC_W_PRM'
indicator[12] = 'RH_PAHC_W_MON,RH_PAHC_W_DIS,RH_PAHC_W_TRN,RH_PAHC_W_ALN,RH_PAHC_W_FEM'
indicator[13] = 'MM_MMRT_W_MRT,MM_MMRO_W_GFR,MM_MMRO_W_MMR,MM_MMRO_W_CIL,MM_MMRO_W_CIH'
indicator[14] = 'RH_DELP_C_DHF,FP_CUSA_W_ANY'
indicators = paste0(indicator[1], ',', indicator[2], ',', indicator[3], ',', indicator[4], ',', indicator[5],
',', indicator[6], ',', indicator[7], ',',
indicator[8], ',', indicator[9], ',', indicator[10], ',',
indicator[11], ',', indicator[12], ',', indicator[13], ',', indicator[14])
countries = 'BJ,BF,CM,CI,GH,GN,LB,ML,MR,NI,NG,SN,SL,TG'
# years = paste0(seq(1980,2016), collapse = ',')
years = paste0(seq(2000,2016), collapse = ',')
# Figure out where to filter the years of DHS data
json_file <- fromJSON(paste0('http://api.dhsprogram.com/rest/dhs/data?breakdown=national&indicatorIds=',indicators,
'&countryIds=', countries,
'&SurveyYear=', years,
'&apiKey=', apiKey,
'&perpage=5000'))
# Unlist the JSON file entries
json_data <- lapply(json_file$Data, function(x) { unlist(x) })
# Convert JSON input to a data frame
allData <- as.data.frame(do.call("rbind", json_data),stringsAsFactors=FALSE)
svyYrs = allData %>%
group_by(SurveyYear, CountryName) %>%
summarise(num  = n()) %>%
mutate(year = as.integer(SurveyYear))
ggplot(svyYrs, aes(x = year, y = CountryName, size = num)) +
geom_point() +
scale_x_continuous(breaks = seq(1986, 2016, by = 4)) +
theme_xgrid()
ggplot(svyYrs, aes(x = year, y = CountryName, size = num)) +
geom_point() +
scale_x_continuous(limits = c(2000, 2016),
breaks = seq(2000, 2016, by = 2)) +
theme_xgrid()
years = paste0(seq(2000,2016), collapse = ',')
# Import DHS Indicator National-level data
natl = loadDHS(breakdown = 'national', indicators = indicators,
countries = countries, years = years, apiKey = apiKey, numResults = 5000)
subnatl = NULL
for (i in seq_along(indicator)) {
print(i)
temp = loadDHS(breakdown = 'national', indicators = indicator[i], countries = countries,
years = years, apiKey = apiKey, numResults = 5000)
subnatl = rbind(temp, subnatl)
}
write.csv(natl, '~/Documents/USAID/West Africa Regional 2016/dataout/WAFR_DHS_natl.csv')
View(subnatl)
ggplot(natl %>% filter(Indicator %in% 'stunted'), aes(x = SurveyYear, y = Value)) +
geom_point(size = 5) +
facet_wrap(~CountryName)
ggplot(natl %>% filter(Indicator %like% 'stunted'), aes(x = SurveyYear, y = Value)) +
geom_point(size = 5) +
facet_wrap(~CountryName)
ggplot(natl %>% filter(Indicator %like% 'stunted'), aes(x = SurveyYear, y = Value)) +
geom_point(size = 5) +
facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
x = fromJSON(paste0('http://apps.who.int/gho/athena/api/GHO/WHOSIS_000001.csv?filter=COUNTRY:BWA'))
x = fromJSON(paste0(' http://apps.who.int/gho/athena/api/GHO/WHOSIS_000001.json'))
x = fromJSON(paste0('http://apps.who.int/gho/athena/api/GHO/WHOSIS_000001.json'))
json_data <- lapply(x$dataset, function(x) { unlist(x) })
allData <- as.data.frame(do.call("rbind", json_data),stringsAsFactors=FALSE)
View(allData)
library(XML)
df <- read_xml("http://apps.who.int/gho/athena/api/GHO/WHOSIS_000001?filter=COUNTRY:*;REGION:EUR")
warnings()
df <- xmlParse("http://apps.who.int/gho/athena/api/GHO/WHOSIS_000001?filter=COUNTRY:*;REGION:EUR")
xml_data <- xmlToList(df)
ggplot(natl %>% filter(Indicator %like% 'maternal mortality'), aes(x = SurveyYear, y = Value)) +
geom_point(size = 5) +
facet_wrap(~CountryName)
ggplot(natl %>% filter(Indicator %like% 'Maternal mortality'), aes(x = SurveyYear, y = Value)) +
geom_point(size = 5) +
facet_wrap(~CountryName)
ggplot(natl %>% filter(Indicator %like% 'Maternal mortality ratio'), aes(x = SurveyYear, y = Value)) +
geom_point(size = 5) +
facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 1200))
ggplot(natl %>% filter(Indicator %like% 'stunted'), aes(x = SurveyYear, y = Value)) +
geom_point(size = 5) +
facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
ggplot(natl %>% filter(Indicator %like% 'stunted'), aes(x = SurveyYear, y = Value)) +
geom_point(size = 5) +
facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
ggplot(natl %>% filter(Indicator %like% 'stunted'), aes(x = SurveyYear, y = Value)) +
geom_point(size = 3) +
geom_line() +
facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
ggplot(natl %>% filter(Indicator %like% 'stunted'),
aes(x = SurveyYear, y = Value, colour = CountryName)) +
geom_point(size = 3) +
geom_line() +
# facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
df = natl %>% filter(Indicator %like% 'stunted')
df
mostRecent = df %>%
group_by(CountryName) %>%
summarise(max(SurveyYear))
mostRecent
avg = left_join(mostRecent, df)
mostRecent = df %>%
group_by(CountryName) %>%
summarise(SurveyYear = max(SurveyYear))
avg = left_join(mostRecent, df)
avg
wAfrAvg = mean(avg$Value)
ggplot(df,
aes(x = SurveyYear, y = Value, colour = CountryName)) +
geom_point(size = 3) +
geom_line() +
geom_hline(wAfrAvg) +
# facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
aes(x = SurveyYear, y = Value, colour = CountryName)) +
geom_point(size = 3) +
geom_line() +
geom_hline(yintercept = wAfrAvg) +
# facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
ggplot(df,
aes(x = SurveyYear, y = Value, colour = CountryName)) +
geom_point(size = 3) +
geom_line() +
geom_hline(yintercept = wAfrAvg) +
# facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
avg
avg = avg %>%
mutate(deviation = Value- wAfrAvg)
avg
avg = avg %>%
mutate(deviation = Value - wAfrAvg)
avg
View(df)
View(avg)
df = left_join(df, avg %>% select(CountryName, deviation))
ggplot(df,
aes(x = SurveyYear, y = Value, colour = deivation)) +
geom_point(size = 3) +
geom_line() +
geom_hline(yintercept = wAfrAvg) +
scale_colour_gradientn(colours = brewer.pal(11, 'RdYlBu')) +
# facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
ggplot(df,
aes(x = SurveyYear, y = Value, colour = deviation)) +
geom_point(size = 3) +
geom_line() +
geom_hline(yintercept = wAfrAvg) +
scale_colour_gradientn(colours = brewer.pal(11, 'RdYlBu')) +
# facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
ggplot(df,
aes(x = SurveyYear, y = Value,
group = CountryName,
colour = deviation)) +
geom_point(size = 3) +
geom_line() +
geom_hline(yintercept = wAfrAvg) +
scale_colour_gradientn(colours = brewer.pal(11, 'RdYlBu')) +
# facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
ggplot(df,
aes(x = SurveyYear, y = Value,
group = CountryName,
colour = deviation)) +
geom_point(size = 3) +
geom_line() +
geom_hline(yintercept = wAfrAvg) +
scale_colour_gradientn(colours = brewer.pal(11, 'RdYlBu')) +
# facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60)) +
theme_xygrid()
ggplot(df,
aes(x = SurveyYear, y = Value,
group = CountryName,
colour = deviation)) +
geom_point(size = 3) +
geom_line() +
geom_hline(yintercept = wAfrAvg) +
scale_colour_gradientn(colours = rev(brewer.pal(11, 'RdYlBu'))) +
# facet_wrap(~CountryName) +
scale_y_continuous(limits = c(0, 60))
countries = 'BD,BF,BU,KH,TD,CD,ET,GH,GU,GN,HT,HN,IA,ID,KE,LB,MD,MW,ML,MR,MZ,NP,NI,RW,SL,SD,UG,ZM,ZW'
# FFP data for Kyla: DHS since 2000
countries = 'BD,BF,BU,KH,TD,CD,ET,GH,GU,GN,HT,HN,IA,ID,KE,LB,MD,MW,ML,MR,MZ,NP,NI,RW,SL,SD,UG,ZM,ZW'
years = paste0(seq(2000,2016), collapse = ',')
apiKey = 'USAAID-405632'
indicators = 'CM_ECMT_C_PNR,CH_DIAR_C_DIA,CH_DIAR_C_DIA,CH_DSTL_C_SAF,CH_DSTL_C_SAF,CN_NUTS_C_HA2,CN_NUTS_C_HAM,CN_NUTS_C_WH2,CN_NUTS_C_WA2,CN_BFDR_C_MDE,WS_SRCE_H_IMP,WS_SRCE_H_PIP,WS_SRCE_H_PYD,WS_SRCE_H_TAP,WS_SRCE_H_PNB,WS_SRCE_H_POY,WS_SRCE_H_TUB,WS_SRCE_H_PWU,WS_SRCE_H_PWL,WS_SRCE_H_PSU,WS_SRCE_H_PSG,WS_SRCE_H_RNW,WS_SRCE_H_BOT,WS_SRCE_H_FLT,WS_SRCE_H_NIM,WS_SRCE_H_UWU,WS_SRCE_H_UWL,WS_SRCE_H_USG,WS_SRCE_H_USG,WS_SRCE_H_TNK,WS_SRCE_H_CRT,WS_SRCE_H_VND,WS_SRCE_H_SCH,WS_SRCE_H_SRF,WS_SRCE_H_OTH,WS_TIME_H_ONP,WS_TIME_H_L30,WS_TIME_H_30P,WS_WTRT_H_BOL,WS_WTRT_H_BLC,WS_WTRT_H_STN,WS_WTRT_H_CER,WS_WTRT_H_SOL,WS_WTRT_H_OTH,WS_WTRT_H_NTR,WS_WTRT_H_APP,WS_TLET_H_IMP,WS_TLET_H_FSW,WS_TLET_H_FSP,WS_TLET_H_FPT,WS_TLET_H_VIP,WS_TLET_H_PSL,WS_TLET_H_COM,WS_TLET_H_IMO,WS_TLET_H_SHR,WS_TLET_H_SSW,WS_TLET_H_SSP,WS_TLET_H_SPT,WS_TLET_H_SVP,WS_TLET_H_SSL,WS_TLET_H_SCM,WS_TLET_H_SHO,WS_TLET_H_NIM,WS_TLET_H_NFL,WS_TLET_H_NPT,WS_TLET_H_NBK,WS_TLET_H_NHG,WS_TLET_H_NWT,WS_TLET_H_NFC,WS_TLET_H_OTH,WS_HNDW_H_OBS,WS_HNDW_H_SPW,WS_HNDW_H_WCL,WS_HNDW_H_WTO,WS_HNDW_H_SPO,WS_HNDW_H_CLO,WS_HNDW_H_NON,HC_FLRM_H_NAT,HC_FLRM_H_ETH,HC_FLRM_H_DNG,HC_FLRM_H_RUD,HC_FLRM_H_WDP,HC_FLRM_H_PLM,HC_FLRM_H_FIN,HC_FLRM_H_PQT,HC_FLRM_H_VIN,HC_FLRM_H_CER,HC_FLRM_H_CEM,HC_FLRM_H_CPT,HC_FLRM_H_OTH,HC_WIXQ_P_LOW,HC_WIXQ_P_2ND,HC_WIXQ_P_MID,HC_WIXQ_P_4TH,HC_WIXQ_P_HGH,HC_WIXQ_P_GNI,FE_CEBA_W_MNC,FP_CUSA_W_MOD,FP_CUSA_W_NCU,ED_EDUC_W_MYR,HC_HEFF_H_RDO,HC_HEFF_H_TLV,HC_HEFF_H_MPH,HC_AGON_H_LND,HC_AGON_H_ANM'
ffp = loadDHS(breakdown = 'background', indicators = indicators,
countries = countries, years = years, apiKey = apiKey, numResults = 5000)
countries1 = 'BD,BF,BU,KH,TD,CD,ET,GH,GU,GN,HT,HN,IA'
ffp = loadDHS(breakdown = 'background', indicators = indicators,
countries = countries1, years = years, apiKey = apiKey, numResults = 5000)
countries1 = 'BD,BF,BU,KH,TD,CD,ET,GH,GU,GN,HT,HN,IA,ID,KE'
countries2 = 'LB,MD,MW,ML,MR,MZ,NP,NI,RW,SL,SD,UG,ZM,ZW'
# FFP data for Kyla: DHS since 2000
countries1 = 'BD,BF,BU,KH,TD,CD,ET,GH,GU,GN,HT,HN,IA,ID,KE'
countries2 = 'LB,MD,MW,ML,MR,MZ,NP,NI,RW,SL,SD,UG,ZM,ZW'
years = paste0(seq(2000,2016), collapse = ',')
apiKey = 'USAAID-405632'
indicators = 'CM_ECMT_C_PNR,CH_DIAR_C_DIA,CH_DIAR_C_DIA,CH_DSTL_C_SAF,CH_DSTL_C_SAF,CN_NUTS_C_HA2,CN_NUTS_C_HAM,CN_NUTS_C_WH2,CN_NUTS_C_WA2,CN_BFDR_C_MDE,WS_SRCE_H_IMP,WS_SRCE_H_PIP,WS_SRCE_H_PYD,WS_SRCE_H_TAP,WS_SRCE_H_PNB,WS_SRCE_H_POY,WS_SRCE_H_TUB,WS_SRCE_H_PWU,WS_SRCE_H_PWL,WS_SRCE_H_PSU,WS_SRCE_H_PSG,WS_SRCE_H_RNW,WS_SRCE_H_BOT,WS_SRCE_H_FLT,WS_SRCE_H_NIM,WS_SRCE_H_UWU,WS_SRCE_H_UWL,WS_SRCE_H_USG,WS_SRCE_H_USG,WS_SRCE_H_TNK,WS_SRCE_H_CRT,WS_SRCE_H_VND,WS_SRCE_H_SCH,WS_SRCE_H_SRF,WS_SRCE_H_OTH,WS_TIME_H_ONP,WS_TIME_H_L30,WS_TIME_H_30P,WS_WTRT_H_BOL,WS_WTRT_H_BLC,WS_WTRT_H_STN,WS_WTRT_H_CER,WS_WTRT_H_SOL,WS_WTRT_H_OTH,WS_WTRT_H_NTR,WS_WTRT_H_APP,WS_TLET_H_IMP,WS_TLET_H_FSW,WS_TLET_H_FSP,WS_TLET_H_FPT,WS_TLET_H_VIP,WS_TLET_H_PSL,WS_TLET_H_COM,WS_TLET_H_IMO,WS_TLET_H_SHR,WS_TLET_H_SSW,WS_TLET_H_SSP,WS_TLET_H_SPT,WS_TLET_H_SVP,WS_TLET_H_SSL,WS_TLET_H_SCM,WS_TLET_H_SHO,WS_TLET_H_NIM,WS_TLET_H_NFL,WS_TLET_H_NPT,WS_TLET_H_NBK,WS_TLET_H_NHG,WS_TLET_H_NWT,WS_TLET_H_NFC,WS_TLET_H_OTH,WS_HNDW_H_OBS,WS_HNDW_H_SPW,WS_HNDW_H_WCL,WS_HNDW_H_WTO,WS_HNDW_H_SPO,WS_HNDW_H_CLO,WS_HNDW_H_NON,HC_FLRM_H_NAT,HC_FLRM_H_ETH,HC_FLRM_H_DNG,HC_FLRM_H_RUD,HC_FLRM_H_WDP,HC_FLRM_H_PLM,HC_FLRM_H_FIN,HC_FLRM_H_PQT,HC_FLRM_H_VIN,HC_FLRM_H_CER,HC_FLRM_H_CEM,HC_FLRM_H_CPT,HC_FLRM_H_OTH,HC_WIXQ_P_LOW,HC_WIXQ_P_2ND,HC_WIXQ_P_MID,HC_WIXQ_P_4TH,HC_WIXQ_P_HGH,HC_WIXQ_P_GNI,FE_CEBA_W_MNC,FP_CUSA_W_MOD,FP_CUSA_W_NCU,ED_EDUC_W_MYR,HC_HEFF_H_RDO,HC_HEFF_H_TLV,HC_HEFF_H_MPH,HC_AGON_H_LND,HC_AGON_H_ANM'
ffp1 = loadDHS(breakdown = 'background', indicators = indicators,
countries = countries1, years = years, apiKey = apiKey, numResults = 5000)
ffp2 = loadDHS(breakdown = 'background', indicators = indicators,
countries = countries2, years = years, apiKey = apiKey, numResults = 5000)
ffp = rbind(ffp1, ffp2)
View(ffp)
ffp1 = loadDHS(breakdown = 'all', indicators = indicators,
countries = countries1, years = years, apiKey = apiKey, numResults = 5000)
View(ffp1)
ffp2 = loadDHS(breakdown = 'all', indicators = indicators,
countries = countries2, years = years, apiKey = apiKey, numResults = 5000)
ffp = rbind(ffp1, ffp2)
View(ffp2)
indicators = 'ED_EDUC_W_SEP,CM_ECMT_C_PNR,CH_DIAR_C_DIA,CH_DIAR_C_DIA,CH_DSTL_C_SAF,CH_DSTL_C_SAF,CN_NUTS_C_HA2,CN_NUTS_C_HAM,CN_NUTS_C_WH2,CN_NUTS_C_WA2,CN_BFDR_C_MDE,WS_SRCE_H_IMP,WS_SRCE_H_PIP,WS_SRCE_H_PYD,WS_SRCE_H_TAP,WS_SRCE_H_PNB,WS_SRCE_H_POY,WS_SRCE_H_TUB,WS_SRCE_H_PWU,WS_SRCE_H_PWL,WS_SRCE_H_PSU,WS_SRCE_H_PSG,WS_SRCE_H_RNW,WS_SRCE_H_BOT,WS_SRCE_H_FLT,WS_SRCE_H_NIM,WS_SRCE_H_UWU,WS_SRCE_H_UWL,WS_SRCE_H_USG,WS_SRCE_H_USG,WS_SRCE_H_TNK,WS_SRCE_H_CRT,WS_SRCE_H_VND,WS_SRCE_H_SCH,WS_SRCE_H_SRF,WS_SRCE_H_OTH,WS_TIME_H_ONP,WS_TIME_H_L30,WS_TIME_H_30P,WS_WTRT_H_BOL,WS_WTRT_H_BLC,WS_WTRT_H_STN,WS_WTRT_H_CER,WS_WTRT_H_SOL,WS_WTRT_H_OTH,WS_WTRT_H_NTR,WS_WTRT_H_APP,WS_TLET_H_IMP,WS_TLET_H_FSW,WS_TLET_H_FSP,WS_TLET_H_FPT,WS_TLET_H_VIP,WS_TLET_H_PSL,WS_TLET_H_COM,WS_TLET_H_IMO,WS_TLET_H_SHR,WS_TLET_H_SSW,WS_TLET_H_SSP,WS_TLET_H_SPT,WS_TLET_H_SVP,WS_TLET_H_SSL,WS_TLET_H_SCM,WS_TLET_H_SHO,WS_TLET_H_NIM,WS_TLET_H_NFL,WS_TLET_H_NPT,WS_TLET_H_NBK,WS_TLET_H_NHG,WS_TLET_H_NWT,WS_TLET_H_NFC,WS_TLET_H_OTH,WS_HNDW_H_OBS,WS_HNDW_H_SPW,WS_HNDW_H_WCL,WS_HNDW_H_WTO,WS_HNDW_H_SPO,WS_HNDW_H_CLO,WS_HNDW_H_NON,HC_FLRM_H_NAT,HC_FLRM_H_ETH,HC_FLRM_H_DNG,HC_FLRM_H_RUD,HC_FLRM_H_WDP,HC_FLRM_H_PLM,HC_FLRM_H_FIN,HC_FLRM_H_PQT,HC_FLRM_H_VIN,HC_FLRM_H_CER,HC_FLRM_H_CEM,HC_FLRM_H_CPT,HC_FLRM_H_OTH,HC_WIXQ_P_LOW,HC_WIXQ_P_2ND,HC_WIXQ_P_MID,HC_WIXQ_P_4TH,HC_WIXQ_P_HGH,HC_WIXQ_P_GNI,FE_CEBA_W_MNC,FP_CUSA_W_MOD,FP_CUSA_W_NCU,ED_EDUC_W_MYR,HC_HEFF_H_RDO,HC_HEFF_H_TLV,HC_HEFF_H_MPH,HC_AGON_H_LND,HC_AGON_H_ANM'
ffp1 = loadDHS(breakdown = 'all', indicators = indicators,
countries = countries1, years = years, apiKey = apiKey, numResults = 5000)
# Import DHS data ---------------------------------------------------------
# Common indicators
# Unmet need total (iCE37FE2)
# Total fertility rate (i133C8F8)
# Median duration of exclusive breastfeeding (i5716309)
# Women receiving an HIV test and receiving test results in the last 12 months (i42759492)
# Children underweight (iCC97002)
# Households with electricity (i7C3CB1)
# Children under 5 who slept under an insecticide treated net (ITN) (iC6D4E13)
# Infant mortality rate (i42FFDB2)
# Men receiving an HIV test and receiving test results in the last 12 months (i42759491)
# HIV prevalence among general population (i41075E93)
# HIV prevalence among women (i41075E92)
# HIV prevalence among men (i41075E91)
# Under-five mortality rate (i42FFDB4)
# Received all vaccinations (i4E75F0A)
# Treatment of diarrhea: Either ORS or RHS (i533BDCB)
# Median age at first marriage: 25-49 (i349C430)
# Children wasted (iCC973EA)
# Women with secondary or higher education (iA999FA)
# Place of delivery: Health facility (i49B3AD0)
# Children stunted (iCC96C1A)
# Married women currently using any modern method of contraception (i209E191)
# Married women currently using any method of contraception (i209E190)
# Median age at first sexual intercourse: 25-49 (i36848B0)
# Women who are literate (i797B5DA)
library(llamar)
loadPkgs()
# DHS ---------------------------------------------------------------------
# set up the queries ------------------------------------------------------
apiKey = 'USAAID-405632'
indicator = NULL
indicator[1] = 'FP_NADM_W_UNT,FE_FRTR_W_TFR,CN_BFDR_C_MDE,HA_CPHT_W_T1R,HC_ELEC_H_ELC'
indicator[2] = 'CN_NUTS_C_WA2,HA_HIVP_W_HIV,HA_HIVP_W_HVE'
indicator[3] = 'HA_HIVP_B_HIV,HA_HIVP_B_HVE,CM_ECMT_C_U5M,CM_ECMR_C_IMR'
indicator[4] = 'CM_ECMR_C_NNR,CH_VACS_C_BAS,CH_VACS_C_NON,CH_VACC_C_BAS,CH_VACC_C_NON'
indicator[5] = 'CH_VAC1_C_BAS,CH_VAC1_C_NON,CH_DIAT_C_ORT,CH_DIAR_C_DIA,MA_AAFM_W_M20'
indicator[6] = 'MA_AAFM_W,MA_AAFM_W,MA_AAFM_W,MA_AAFM_W,MA_AAFM_W,MA_AAFM_W,MA_AAFM_W_M2,SX_AAFS_W_M20'
indicator[7] = 'HA_HIVP_M_HVE,HA_HIVP_M_HIV'
indicator[8] = 'CN_NUTS_C_WH2,CN_NUTS_C_HA2,ED_EDUC_W_SEP'
indicator[9] = 'CM_ECMR_C_PNR,FP_CUSA_W_MOD,FP_CUSM_W_ANY,FP_CUSM_W_MOD'
indicator[10] = 'SX_AAFS_W_M25,SX_AAFS_W_M30,SX_AAFS_W_M35,SX_AAFS_W_M40,SX_AAFS_W_M45'
indicator[11] = 'SX_AAFS_W_M2A,SX_AAFS_W_M2B,ED_LITR_W_LIT,RH_PAHC_W_KNW,RH_PAHC_W_PRM'
indicator[12] = 'RH_PAHC_W_MON,RH_PAHC_W_DIS,RH_PAHC_W_TRN,RH_PAHC_W_ALN,RH_PAHC_W_FEM'
indicator[13] = 'MM_MMRT_W_MRT,MM_MMRO_W_GFR,MM_MMRO_W_MMR,MM_MMRO_W_CIL,MM_MMRO_W_CIH'
indicator[14] = 'RH_DELP_C_DHF,FP_CUSA_W_ANY'
indicators = paste0(indicator[1], ',', indicator[2], ',', indicator[3], ',', indicator[4], ',', indicator[5],
',', indicator[6], ',', indicator[7], ',',
indicator[8], ',', indicator[9], ',', indicator[10], ',',
indicator[11], ',', indicator[12], ',', indicator[13], ',', indicator[14])
countries = 'BJ,BF,CM,CI,GH,GN,LB,ML,MR,NI,NG,SN,SL,TG'
# years = paste0(seq(1980,2016), collapse = ',')
years = paste0(seq(2000,2016), collapse = ',')
# Figure out where to filter the years of DHS data
json_file <- fromJSON(paste0('http://api.dhsprogram.com/rest/dhs/data?breakdown=national&indicatorIds=',indicators,
'&countryIds=', countries,
'&SurveyYear=', years,
'&apiKey=', apiKey,
'&perpage=5000'))
# Unlist the JSON file entries
json_data <- lapply(json_file$Data, function(x) { unlist(x) })
# Convert JSON input to a data frame
allData <- as.data.frame(do.call("rbind", json_data),stringsAsFactors=FALSE)
svyYrs = allData %>%
group_by(SurveyYear, CountryName) %>%
summarise(num  = n()) %>%
mutate(year = as.integer(SurveyYear))
ggplot(svyYrs, aes(x = year, y = CountryName, size = num)) +
geom_point() +
scale_x_continuous(breaks = seq(1986, 2016, by = 4)) +
theme_xgrid()
ggplot(svyYrs, aes(x = year, y = CountryName, size = num)) +
geom_point() +
scale_x_continuous(limits = c(2000, 2016),
breaks = seq(2000, 2016, by = 2)) +
theme_xgrid()
years = paste0(seq(2000,2016), collapse = ',')
# Import DHS Indicator National-level data
natl = loadDHS(breakdown = 'national', indicators = indicators,
countries = countries, years = years, apiKey = apiKey, numResults = 5000)
subnatl = NULL
for (i in seq_along(indicator)) {
print(i)
temp = loadDHS(breakdown = 'national', indicators = indicator[i], countries = countries,
years = years, apiKey = apiKey, numResults = 5000)
subnatl = rbind(temp, subnatl)
}
View(subnatl)
for (i in 1:2)){#seq_along(indicator)) {
print(i)
temp = loadDHS(breakdown = 'all', indicators = indicator[i], countries = countries,
years = years, apiKey = apiKey, numResults = 5000)
subnatl = rbind(temp, subnatl)
}
for (i in 1:2){#seq_along(indicator)) {
print(i)
temp = loadDHS(breakdown = 'all', indicators = indicator[i], countries = countries,
years = years, apiKey = apiKey, numResults = 5000)
subnatl = rbind(temp, subnatl)
}
for (i in seq_along(indicator)) {
print(i)
temp = loadDHS(breakdown = 'all', indicators = indicator[i], countries = countries,
years = years, apiKey = apiKey, numResults = 5000)
subnatl = rbind(temp, subnatl)
}
json_file <- fromJSON(paste0('http://api.dhsprogram.com/rest/dhs/data?breakdown=all&indicatorIds=',indicators,
'&countryIds=', countries,
'&SurveyYear=', years,
'&apiKey=', apiKey,
'&perpage=5000'))
library(llamar)
# FFP data for Kyla: DHS since 2000
countries1 = 'BD,BF,BU,KH,TD,CD,ET,GH,GU,GN,HT,HN,IA,ID,KE'
countries2 = 'LB,MD,MW,ML,MR,MZ,NP,NI,RW,SL,SD,UG,ZM,ZW'
years = paste0(seq(2000,2016), collapse = ',')
apiKey = 'USAAID-405632'
indicators = 'CM_ECMT_C_PNR,CH_DIAR_C_DIA,CH_DIAR_C_DIA,CH_DSTL_C_SAF,CH_DSTL_C_SAF,CN_NUTS_C_HA2,CN_NUTS_C_HAM,CN_NUTS_C_WH2,CN_NUTS_C_WA2,CN_BFDR_C_MDE,WS_SRCE_H_IMP,WS_SRCE_H_PIP,WS_SRCE_H_PYD,WS_SRCE_H_TAP,WS_SRCE_H_PNB,WS_SRCE_H_POY,WS_SRCE_H_TUB,WS_SRCE_H_PWU,WS_SRCE_H_PWL,WS_SRCE_H_PSU,WS_SRCE_H_PSG,WS_SRCE_H_RNW,WS_SRCE_H_BOT,WS_SRCE_H_FLT,WS_SRCE_H_NIM,WS_SRCE_H_UWU,WS_SRCE_H_UWL,WS_SRCE_H_USG,WS_SRCE_H_USG,WS_SRCE_H_TNK,WS_SRCE_H_CRT,WS_SRCE_H_VND,WS_SRCE_H_SCH,WS_SRCE_H_SRF,WS_SRCE_H_OTH,WS_TIME_H_ONP,WS_TIME_H_L30,WS_TIME_H_30P,WS_WTRT_H_BOL,WS_WTRT_H_BLC,WS_WTRT_H_STN,WS_WTRT_H_CER,WS_WTRT_H_SOL,WS_WTRT_H_OTH,WS_WTRT_H_NTR,WS_WTRT_H_APP,WS_TLET_H_IMP,WS_TLET_H_FSW,WS_TLET_H_FSP,WS_TLET_H_FPT,WS_TLET_H_VIP,WS_TLET_H_PSL,WS_TLET_H_COM,WS_TLET_H_IMO,WS_TLET_H_SHR,WS_TLET_H_SSW,WS_TLET_H_SSP,WS_TLET_H_SPT,WS_TLET_H_SVP,WS_TLET_H_SSL,WS_TLET_H_SCM,WS_TLET_H_SHO,WS_TLET_H_NIM,WS_TLET_H_NFL,WS_TLET_H_NPT,WS_TLET_H_NBK,WS_TLET_H_NHG,WS_TLET_H_NWT,WS_TLET_H_NFC,WS_TLET_H_OTH,WS_HNDW_H_OBS,WS_HNDW_H_SPW,WS_HNDW_H_WCL,WS_HNDW_H_WTO,WS_HNDW_H_SPO,WS_HNDW_H_CLO,WS_HNDW_H_NON,HC_FLRM_H_NAT,HC_FLRM_H_ETH,HC_FLRM_H_DNG,HC_FLRM_H_RUD,HC_FLRM_H_WDP,HC_FLRM_H_PLM,HC_FLRM_H_FIN,HC_FLRM_H_PQT,HC_FLRM_H_VIN,HC_FLRM_H_CER,HC_FLRM_H_CEM,HC_FLRM_H_CPT,HC_FLRM_H_OTH,HC_WIXQ_P_LOW,HC_WIXQ_P_2ND,HC_WIXQ_P_MID,HC_WIXQ_P_4TH,HC_WIXQ_P_HGH,HC_WIXQ_P_GNI,FE_CEBA_W_MNC,FP_CUSA_W_MOD,FP_CUSA_W_NCU,ED_EDUC_W_MYR,HC_HEFF_H_RDO,HC_HEFF_H_TLV,HC_HEFF_H_MPH,HC_AGON_H_LND,HC_AGON_H_ANM'
ffp1 = loadDHS(breakdown = 'all', indicators = indicators,
countries = countries1, years = years, apiKey = apiKey, numResults = 5000)
ffp2 = loadDHS(breakdown = 'all', indicators = indicators,
countries = countries2, years = years, apiKey = apiKey, numResults = 5000)
ffp = rbind(ffp1, ffp2)
View(ffp)
library(llamar)
# FFP data for Kyla: DHS since 2000
countries1 = 'BD,BF,BU,KH,TD,CD,ET,GH,GU,GN,HT,HN,IA,ID,KE'
countries2 = 'LB,MD,MW,ML,MR,MZ,NP,NI,RW,SL,SD,UG,ZM,ZW'
years = paste0(seq(2000,2016), collapse = ',')
apiKey = 'USAAID-405632'
indicators = 'CM_ECMT_C_PNR,CH_DIAR_C_DIA,CH_DIAR_C_DIA,CH_DSTL_C_SAF,CH_DSTL_C_SAF,CN_NUTS_C_HA2,CN_NUTS_C_HAM,CN_NUTS_C_WH2,CN_NUTS_C_WA2,CN_BFDR_C_MDE,WS_SRCE_H_IMP,WS_SRCE_H_PIP,WS_SRCE_H_PYD,WS_SRCE_H_TAP,WS_SRCE_H_PNB,WS_SRCE_H_POY,WS_SRCE_H_TUB,WS_SRCE_H_PWU,WS_SRCE_H_PWL,WS_SRCE_H_PSU,WS_SRCE_H_PSG,WS_SRCE_H_RNW,WS_SRCE_H_BOT,WS_SRCE_H_FLT,WS_SRCE_H_NIM,WS_SRCE_H_UWU,WS_SRCE_H_UWL,WS_SRCE_H_USG,WS_SRCE_H_USG,WS_SRCE_H_TNK,WS_SRCE_H_CRT,WS_SRCE_H_VND,WS_SRCE_H_SCH,WS_SRCE_H_SRF,WS_SRCE_H_OTH,WS_TIME_H_ONP,WS_TIME_H_L30,WS_TIME_H_30P,WS_WTRT_H_BOL,WS_WTRT_H_BLC,WS_WTRT_H_STN,WS_WTRT_H_CER,WS_WTRT_H_SOL,WS_WTRT_H_OTH,WS_WTRT_H_NTR,WS_WTRT_H_APP,WS_TLET_H_IMP,WS_TLET_H_FSW,WS_TLET_H_FSP,WS_TLET_H_FPT,WS_TLET_H_VIP,WS_TLET_H_PSL,WS_TLET_H_COM,WS_TLET_H_IMO,WS_TLET_H_SHR,WS_TLET_H_SSW,WS_TLET_H_SSP,WS_TLET_H_SPT,WS_TLET_H_SVP,WS_TLET_H_SSL,WS_TLET_H_SCM,WS_TLET_H_SHO,WS_TLET_H_NIM,WS_TLET_H_NFL,WS_TLET_H_NPT,WS_TLET_H_NBK,WS_TLET_H_NHG,WS_TLET_H_NWT,WS_TLET_H_NFC,WS_TLET_H_OTH,WS_HNDW_H_OBS,WS_HNDW_H_SPW,WS_HNDW_H_WCL,WS_HNDW_H_WTO,WS_HNDW_H_SPO,WS_HNDW_H_CLO,WS_HNDW_H_NON,HC_FLRM_H_NAT,HC_FLRM_H_ETH,HC_FLRM_H_DNG,HC_FLRM_H_RUD,HC_FLRM_H_WDP,HC_FLRM_H_PLM,HC_FLRM_H_FIN,HC_FLRM_H_PQT,HC_FLRM_H_VIN,HC_FLRM_H_CER,HC_FLRM_H_CEM,HC_FLRM_H_CPT,HC_FLRM_H_OTH,HC_WIXQ_P_LOW,HC_WIXQ_P_2ND,HC_WIXQ_P_MID,HC_WIXQ_P_4TH,HC_WIXQ_P_HGH,HC_WIXQ_P_GNI,FE_CEBA_W_MNC,FP_CUSA_W_MOD,FP_CUSA_W_NCU,ED_EDUC_W_MYR,HC_HEFF_H_RDO,HC_HEFF_H_TLV,HC_HEFF_H_MPH,HC_AGON_H_LND,HC_AGON_H_ANM'
ffp1 = loadDHS(breakdown = 'background', indicators = indicators,
countries = countries1, years = years, apiKey = apiKey, numResults = 5000)
ffp2 = loadDHS(breakdown = 'background', indicators = indicators,
countries = countries2, years = years, apiKey = apiKey, numResults = 5000)
ffp = rbind(ffp1, ffp2)
countries1 = 'BD,BF,BU,KH,TD,CD,ET,GH'
ffp1 = loadDHS(breakdown = 'background', indicators = indicators,
countries = countries1, years = years, apiKey = apiKey, numResults = 5000)
countries1 = 'BD,BF,BU,KH,TD'
ffp1 = loadDHS(breakdown = 'background', indicators = indicators,
countries = countries1, years = years, apiKey = apiKey, numResults = 5000)
countries1 = 'BD,BF,BU'
ffp1 = loadDHS(breakdown = 'background', indicators = indicators,
countries = countries1, years = years, apiKey = apiKey, numResults = 5000)
View(ffp1)
countries = c('BD','BF','BU','KH','TD','CD','ET','GH','GU','GN','HT','HN','IA','ID','KE','LB','MD','MW','ML','MR','MZ','NP','NI','RW','SL','SD','UG','ZM','ZW')
library(llamar)
# FFP data for Kyla: DHS since 2000
countries = c('BD','BF','BU','KH','TD','CD','ET','GH','GU','GN','HT','HN','IA','ID','KE','LB','MD','MW','ML','MR','MZ','NP','NI','RW','SL','SD','UG','ZM','ZW')
years = paste0(seq(2000,2016), collapse = ',')
apiKey = 'USAAID-405632'
indicators = 'CM_ECMT_C_PNR,CH_DIAR_C_DIA,CH_DIAR_C_DIA,CH_DSTL_C_SAF,CH_DSTL_C_SAF,CN_NUTS_C_HA2,CN_NUTS_C_HAM,CN_NUTS_C_WH2,CN_NUTS_C_WA2,CN_BFDR_C_MDE,WS_SRCE_H_IMP,WS_SRCE_H_PIP,WS_SRCE_H_PYD,WS_SRCE_H_TAP,WS_SRCE_H_PNB,WS_SRCE_H_POY,WS_SRCE_H_TUB,WS_SRCE_H_PWU,WS_SRCE_H_PWL,WS_SRCE_H_PSU,WS_SRCE_H_PSG,WS_SRCE_H_RNW,WS_SRCE_H_BOT,WS_SRCE_H_FLT,WS_SRCE_H_NIM,WS_SRCE_H_UWU,WS_SRCE_H_UWL,WS_SRCE_H_USG,WS_SRCE_H_USG,WS_SRCE_H_TNK,WS_SRCE_H_CRT,WS_SRCE_H_VND,WS_SRCE_H_SCH,WS_SRCE_H_SRF,WS_SRCE_H_OTH,WS_TIME_H_ONP,WS_TIME_H_L30,WS_TIME_H_30P,WS_WTRT_H_BOL,WS_WTRT_H_BLC,WS_WTRT_H_STN,WS_WTRT_H_CER,WS_WTRT_H_SOL,WS_WTRT_H_OTH,WS_WTRT_H_NTR,WS_WTRT_H_APP,WS_TLET_H_IMP,WS_TLET_H_FSW,WS_TLET_H_FSP,WS_TLET_H_FPT,WS_TLET_H_VIP,WS_TLET_H_PSL,WS_TLET_H_COM,WS_TLET_H_IMO,WS_TLET_H_SHR,WS_TLET_H_SSW,WS_TLET_H_SSP,WS_TLET_H_SPT,WS_TLET_H_SVP,WS_TLET_H_SSL,WS_TLET_H_SCM,WS_TLET_H_SHO,WS_TLET_H_NIM,WS_TLET_H_NFL,WS_TLET_H_NPT,WS_TLET_H_NBK,WS_TLET_H_NHG,WS_TLET_H_NWT,WS_TLET_H_NFC,WS_TLET_H_OTH,WS_HNDW_H_OBS,WS_HNDW_H_SPW,WS_HNDW_H_WCL,WS_HNDW_H_WTO,WS_HNDW_H_SPO,WS_HNDW_H_CLO,WS_HNDW_H_NON,HC_FLRM_H_NAT,HC_FLRM_H_ETH,HC_FLRM_H_DNG,HC_FLRM_H_RUD,HC_FLRM_H_WDP,HC_FLRM_H_PLM,HC_FLRM_H_FIN,HC_FLRM_H_PQT,HC_FLRM_H_VIN,HC_FLRM_H_CER,HC_FLRM_H_CEM,HC_FLRM_H_CPT,HC_FLRM_H_OTH,HC_WIXQ_P_LOW,HC_WIXQ_P_2ND,HC_WIXQ_P_MID,HC_WIXQ_P_4TH,HC_WIXQ_P_HGH,HC_WIXQ_P_GNI,FE_CEBA_W_MNC,FP_CUSA_W_MOD,FP_CUSA_W_NCU,ED_EDUC_W_MYR,HC_HEFF_H_RDO,HC_HEFF_H_TLV,HC_HEFF_H_MPH,HC_AGON_H_LND,HC_AGON_H_ANM'
ffp = NULL
for (i in seq_along(countries)) {
print(i)
temp = loadDHS(breakdown = 'all', indicators = indicators, countries = countries[i],
years = years, apiKey = apiKey, numResults = 5000)
ffp = rbind(temp, ffp)
}
countries = c('BD','BF','BU','KH','TD','CD','ET','GH','GN','HT','HN','IA','ID','KE','LB','MD','MW','ML','MR','MZ','NP','NI','RW','SL','SD','UG','ZM','ZW')
View(ffp)
ffp = NULL
for (i in seq_along(countries)) {
print(i)
temp = loadDHS(breakdown = 'all', indicators = indicators, countries = countries[i],
years = years, apiKey = apiKey, numResults = 5000)
ffp = rbind(temp, ffp)
}
countries = c('BD','BF','BU','KH','TD','CD','ET','GH','GN','HT','HN','IA','ID','KE','LB','MD','MW','ML','MR','MZ','NP','NI','RW','SL','UG','ZM','ZW')
ffp = NULL
for (i in seq_along(countries)) {
print(i)
temp = loadDHS(breakdown = 'all', indicators = indicators, countries = countries[i],
years = years, apiKey = apiKey, numResults = 5000)
ffp = rbind(temp, ffp)
}
library(llamar)
# FFP data for Kyla: DHS since 2000
countries = c('BD','BF','BU','KH','TD','CD','ET','GH','GN','HT','HN','IA','ID','KE','LB','MD','MW','ML','MR','MZ','NP','NI','RW','SL','UG','ZM','ZW')
# 'SD','GU', #(no recent data)
years = paste0(seq(2000,2016), collapse = ',')
apiKey = 'USAAID-405632'
indicators = 'CM_ECMT_C_PNR,CH_DIAR_C_DIA,CH_DIAR_C_DIA,CH_DSTL_C_SAF,CH_DSTL_C_SAF,CN_NUTS_C_HA2,CN_NUTS_C_HAM,CN_NUTS_C_WH2,CN_NUTS_C_WA2,CN_BFDR_C_MDE,WS_SRCE_H_IMP,WS_SRCE_H_PIP,WS_SRCE_H_PYD,WS_SRCE_H_TAP,WS_SRCE_H_PNB,WS_SRCE_H_POY,WS_SRCE_H_TUB,WS_SRCE_H_PWU,WS_SRCE_H_PWL,WS_SRCE_H_PSU,WS_SRCE_H_PSG,WS_SRCE_H_RNW,WS_SRCE_H_BOT,WS_SRCE_H_FLT,WS_SRCE_H_NIM,WS_SRCE_H_UWU,WS_SRCE_H_UWL,WS_SRCE_H_USG,WS_SRCE_H_USG,WS_SRCE_H_TNK,WS_SRCE_H_CRT,WS_SRCE_H_VND,WS_SRCE_H_SCH,WS_SRCE_H_SRF,WS_SRCE_H_OTH,WS_TIME_H_ONP,WS_TIME_H_L30,WS_TIME_H_30P,WS_WTRT_H_BOL,WS_WTRT_H_BLC,WS_WTRT_H_STN,WS_WTRT_H_CER,WS_WTRT_H_SOL,WS_WTRT_H_OTH,WS_WTRT_H_NTR,WS_WTRT_H_APP,WS_TLET_H_IMP,WS_TLET_H_FSW,WS_TLET_H_FSP,WS_TLET_H_FPT,WS_TLET_H_VIP,WS_TLET_H_PSL,WS_TLET_H_COM,WS_TLET_H_IMO,WS_TLET_H_SHR,WS_TLET_H_SSW,WS_TLET_H_SSP,WS_TLET_H_SPT,WS_TLET_H_SVP,WS_TLET_H_SSL,WS_TLET_H_SCM,WS_TLET_H_SHO,WS_TLET_H_NIM,WS_TLET_H_NFL,WS_TLET_H_NPT,WS_TLET_H_NBK,WS_TLET_H_NHG,WS_TLET_H_NWT,WS_TLET_H_NFC,WS_TLET_H_OTH,WS_HNDW_H_OBS,WS_HNDW_H_SPW,WS_HNDW_H_WCL,WS_HNDW_H_WTO,WS_HNDW_H_SPO,WS_HNDW_H_CLO,WS_HNDW_H_NON,HC_FLRM_H_NAT,HC_FLRM_H_ETH,HC_FLRM_H_DNG,HC_FLRM_H_RUD,HC_FLRM_H_WDP,HC_FLRM_H_PLM,HC_FLRM_H_FIN,HC_FLRM_H_PQT,HC_FLRM_H_VIN,HC_FLRM_H_CER,HC_FLRM_H_CEM,HC_FLRM_H_CPT,HC_FLRM_H_OTH,HC_WIXQ_P_LOW,HC_WIXQ_P_2ND,HC_WIXQ_P_MID,HC_WIXQ_P_4TH,HC_WIXQ_P_HGH,HC_WIXQ_P_GNI,FE_CEBA_W_MNC,FP_CUSA_W_MOD,FP_CUSA_W_NCU,ED_EDUC_W_MYR,HC_HEFF_H_RDO,HC_HEFF_H_TLV,HC_HEFF_H_MPH,HC_AGON_H_LND,HC_AGON_H_ANM'
ffp = NULL
for (i in seq_along(countries)) {
print(i)
temp = loadDHS(breakdown = 'all', indicators = indicators, countries = countries[i],
years = years, apiKey = apiKey, numResults = 5000)
ffp = rbind(temp, ffp)
}
write.csv(ffp, '~/Documents/USAID/Kyla - FFP reshaping/DHS_data_laura.csv')
install.packages(c("acs", "boot", "car", "checkmate", "choroplethr", "d3heatmap", "dendextend", "evaluate", "formatR", "ggdendro", "ggplot2", "git2r", "googlesheets", "gridExtra", "gtable", "Hmisc", "htmltools", "htmlwidgets", "lme4", "maps", "Matrix", "mgcv", "mlr", "mnormt", "multcomp", "munsell", "nlme", "openssl", "packrat", "plotly", "purrr", "quantreg", "rbokeh", "Rcpp", "RcppEigen", "RCurl", "rex", "rmarkdown", "rsconnect", "scales", "shiny", "swirl", "viridis", "XML"))
install.packages(c("acs", "boot", "car", "checkmate", "choroplethr",
install.packages(c("acs", "boot", "car", "checkmate", "choroplethr", "d3heatmap", "dendextend", "evaluate", "formatR", "ggdendro", "ggplot2", "git2r", "googlesheets", "gridExtra", "gtable", "Hmisc", "htmltools", "htmlwidgets", "lme4", "maps", "Matrix", "mgcv", "mlr", "mnormt", "multcomp", "munsell", "nlme", "openssl", "packrat", "plotly", "purrr", "quantreg", "rbokeh", "Rcpp", "RcppEigen", "RCurl", "rex", "rmarkdown", "rsconnect", "scales", "shiny", "swirl", "viridis", "XML"))
install.packages(c("acs", "boot", "car", "checkmate", "ggplot2", "googlesheets"))
install.packages(c("choroplethr", "d3heatmap", "dendextend", "evaluate", "formatR", "ggdendro", "git2r", "gridExtra", "gtable", "Hmisc", "htmltools", "htmlwidgets", "lme4", "maps", "Matrix", "mgcv", "mlr", "mnormt", "multcomp", "munsell", "nlme", "openssl", "packrat", "plotly", "purrr", "quantreg", "rbokeh", "Rcpp", "RcppEigen", "RCurl", "rex", "rmarkdown", "rsconnect", "scales", "shiny", "swirl", "viridis", "XML"))
install.packages(c("choroplethr", "d3heatmap", "dendextend",
install.packages(c("choroplethr", "d3heatmap", "dendextend", "evaluate", "formatR", "ggdendro", "git2r", "gridExtra"))
install.packages(c("gtable", "htmltools", "htmlwidgets", "maps", "Matrix", "munsell", "nlme", "plotly", "purrr"))
install.packages(c("RCurl", "rex", "rmarkdown", "rsconnect", "scales", "shiny", "swirl", "viridis", "XML"))
install.packages(c("RCurl", "rex", "rmarkdown", "rsconnect",
"shiny")
)
install.packages(c("Hmisc", "lme4", "mgcv", "mlr", "mnormt", "multcomp", "openssl", "packrat", "quantreg", "rbokeh", "Rcpp", "RcppEigen", "rmarkdown", "scales", "shiny", "swirl", "viridis", "XML"))
install.packages(c("rex", "rsconnect"))
install.packages(c("rex", "rsconnect"))
install.packages(c("rex", "rsconnect"))
install.packages("RCurl")
